import {
  EIP1559APIEndpoint,
  EVM_PLUGINS,
  GAS_ESTIMATE_TYPES,
  LegacyGasAPIEndpoint,
  NFTCheckoutEmbed,
  NFTCheckoutPluginError,
  PLUGIN_EVENTS,
  PLUGIN_NAMESPACES,
  PLUGIN_STATUS,
  PROVIDER_EVENTS,
  SOLANA_PLUGINS,
  SignTypedDataVersion,
  SolanaWallet,
  TRANSACTION_ENVELOPE_TYPES,
  TRANSACTION_TYPES,
  TransactionFormatter,
  WALLET_PLUGINS,
  WalletServicesPluginError,
  Web3Auth,
  Web3AuthContextKey,
  Web3AuthNoModal,
  authConnector,
  cookieToWeb3AuthState,
  defaultConnectorsModalConfig,
  fetchEip1159GasEstimates,
  fetchLegacyGasPriceEstimates,
  metaMaskConnector,
  nftCheckoutPlugin,
  normalizeGWEIDecimalNumbers,
  validateAddress,
  validateTypedSignMessageDataV4,
  version,
  walletRegistryUrl,
  walletServicesPlugin
} from "./chunk-D3TJF7RS.js";
import "./chunk-I6FMYGNX.js";
import "./chunk-MMSGLE56.js";
import "./chunk-XJJJAC74.js";
import {
  ANALYTICS_EVENTS,
  ANALYTICS_INTEGRATION_TYPE,
  ANALYTICS_SDK_TYPE,
  Analytics,
  DEFAULT_EIP155_METHODS,
  DEFAULT_EIP_155_EVENTS,
  DEFAULT_SOLANA_EVENTS,
  DEFAULT_SOLANA_METHODS,
  WalletConnectV2Provider,
  createEthChainIdMiddleware,
  createEthChainSwitchMiddleware,
  createEthJsonRpcClient,
  createEthMiddleware,
  createEthProviderConfigMiddleware,
  createWalletMiddleware,
  getNamespacesFromChains,
  getRequiredNamespaces,
  getSupportedEventsByNamespace,
  getSupportedMethodsByNamespace,
  getWalletConnectV2Settings,
  walletConnectV2Connector
} from "./chunk-E37ZTJS5.js";
import "./chunk-QEJAXTE2.js";
import "./chunk-ANJCMEYS.js";
import {
  accountAbstractionProvider,
  toEoaProvider
} from "./chunk-O2AZ2MYW.js";
import "./chunk-6BO67BC2.js";
import "./chunk-JI2BVKAP.js";
import "./chunk-P5PBSPNF.js";
import "./chunk-6XWWGOVT.js";
import {
  BiconomySmartAccount,
  KernelSmartAccount,
  MetamaskSmartAccount,
  NexusSmartAccount,
  SMART_ACCOUNT,
  SafeSmartAccount,
  TrustSmartAccount
} from "./chunk-W4XGBCC6.js";
import "./chunk-3NUX7GKE.js";
import "./chunk-JJ4R2GYE.js";
import {
  CommonJRPCProvider,
  CommonPrivateKeyProvider
} from "./chunk-T76UJC3V.js";
import {
  BaseSolanaConnector,
  WalletStandardProvider,
  getSolanaChainByChainConfig,
  getWallets,
  hasSolanaWalletStandardFeatures,
  walletStandardConnector
} from "./chunk-KVGG4UNH.js";
import "./chunk-64SD37WF.js";
import {
  createConfigMiddleware,
  createGenericJRPCMiddleware,
  createGetAccountsMiddleware,
  createGetPublicKeyMiddleware,
  createRequestAccountsMiddleware,
  createSolanaAccountMiddleware,
  createSolanaChainIdMiddleware,
  createSolanaChainSwitchMiddleware,
  createSolanaJsonRpcClient,
  createSolanaMiddleware,
  createSolanaProviderConfigMiddleware
} from "./chunk-YZ25BAVE.js";
import {
  BaseProvider,
  EIP1193_EVENTS,
  createRandomId
} from "./chunk-JBLZOY4W.js";
import "./chunk-BXZIFEFM.js";
import {
  BaseEvmConnector,
  injectedEvmConnector
} from "./chunk-7AISMB4O.js";
import {
  BaseConnector,
  CONNECTOR_CATEGORY,
  CONNECTOR_EVENTS,
  CONNECTOR_NAMES,
  CONNECTOR_NAMESPACES,
  CONNECTOR_STATUS,
  EVM_CONNECTORS,
  LOGIN_MODE,
  MODAL_SIGN_IN_METHODS,
  MULTI_CHAIN_CONNECTORS,
  SMART_ACCOUNT_WALLET_SCOPE,
  SOLANA_CAIP_CHAIN_MAP,
  SOLANA_CONNECTORS,
  WALLET_CONNECTORS,
  WEB3AUTH_STATE_STORAGE_KEY,
  WIDGET_TYPE,
  checkIfTokenIsExpired,
  clearToken,
  fetchProjectConfig,
  fetchWalletRegistry,
  fromViemChain,
  fromWagmiChain,
  getAaAnalyticsProperties,
  getCaipChainId,
  getErrorAnalyticsProperties,
  getHostname,
  getSavedToken,
  getWalletServicesAnalyticsProperties,
  getWhitelabelAnalyticsProperties,
  isBrowser,
  isHexStrict,
  normalizeWalletName,
  saveToken,
  sdkVersion,
  signerHost,
  storageAvailable,
  withAbort
} from "./chunk-A6MZY642.js";
import {
  log
} from "./chunk-NSXL3SWJ.js";
import {
  BUTTON_POSITION
} from "./chunk-XLWISUI2.js";
import {
  WalletInitializationError,
  WalletLoginError,
  WalletOperationsError,
  WalletProviderError,
  Web3AuthError
} from "./chunk-VBPUSRQJ.js";
import {
  AUTH_CONNECTION,
  CHAIN_NAMESPACES,
  CONFIRMATION_STRATEGY,
  MFA_FACTOR,
  MFA_LEVELS,
  UX_MODE,
  WEB3AUTH_NETWORK,
  cloneDeep2 as cloneDeep,
  getED25519Key
} from "./chunk-B2N4C5QO.js";
import "./chunk-F57LR762.js";
import "./chunk-AQ6AFSCK.js";
import "./chunk-CQQ7RDSY.js";
import "./chunk-NPY75PGV.js";
import "./chunk-Z2JNO6L5.js";
import "./chunk-AV6CGRXD.js";
import "./chunk-4W5QYKQT.js";
import "./chunk-E7YZTEZA.js";
import "./chunk-FF6U6DXW.js";
import "./chunk-HVBN44Z7.js";
import "./chunk-OOI2S6FZ.js";
import "./chunk-RT3OGE7I.js";
import "./chunk-EQGYQIU5.js";
import "./chunk-I4LZO3IN.js";
import "./chunk-ZO7VJ2KK.js";
import "./chunk-FQ3RDL7Q.js";
import "./chunk-5WOPONXG.js";
import "./chunk-M2Y7NS7B.js";
import "./chunk-RJHKLZND.js";
import "./chunk-LWLUVSGB.js";
import {
  createStore
} from "./chunk-6XNWDSHI.js";
import "./chunk-X5OROSC7.js";
import "./chunk-O3KV2FKV.js";
import "./chunk-LCA5K6LN.js";
import "./chunk-HXWRQBIO.js";
import "./chunk-NSFS2AGI.js";
import "./chunk-OCPNNEU4.js";
import "./chunk-3LQ52NAQ.js";
import "./chunk-3T47BPSV.js";
import "./chunk-TWULWKBH.js";
import "./chunk-J4YIASWV.js";
import "./chunk-TLG7CTPL.js";
import "./chunk-VT65UQWK.js";
import "./chunk-ONY6HBPH.js";
export {
  ANALYTICS_EVENTS,
  ANALYTICS_INTEGRATION_TYPE,
  ANALYTICS_SDK_TYPE,
  AUTH_CONNECTION,
  Analytics,
  BUTTON_POSITION,
  BaseConnector,
  BaseEvmConnector,
  BaseProvider,
  BaseSolanaConnector,
  BiconomySmartAccount,
  CHAIN_NAMESPACES,
  CONFIRMATION_STRATEGY,
  CONNECTOR_CATEGORY,
  CONNECTOR_EVENTS,
  CONNECTOR_NAMES,
  CONNECTOR_NAMESPACES,
  CONNECTOR_STATUS,
  CommonJRPCProvider,
  CommonPrivateKeyProvider,
  DEFAULT_EIP155_METHODS,
  DEFAULT_EIP_155_EVENTS,
  DEFAULT_SOLANA_EVENTS,
  DEFAULT_SOLANA_METHODS,
  EIP1193_EVENTS,
  EIP1559APIEndpoint,
  EVM_CONNECTORS,
  EVM_PLUGINS,
  GAS_ESTIMATE_TYPES,
  KernelSmartAccount,
  LOGIN_MODE,
  LegacyGasAPIEndpoint,
  MFA_FACTOR,
  MFA_LEVELS,
  MODAL_SIGN_IN_METHODS,
  MULTI_CHAIN_CONNECTORS,
  MetamaskSmartAccount,
  NFTCheckoutEmbed,
  NFTCheckoutPluginError,
  NexusSmartAccount,
  PLUGIN_EVENTS,
  PLUGIN_NAMESPACES,
  PLUGIN_STATUS,
  PROVIDER_EVENTS,
  SMART_ACCOUNT,
  SMART_ACCOUNT_WALLET_SCOPE,
  SOLANA_CAIP_CHAIN_MAP,
  SOLANA_CONNECTORS,
  SOLANA_PLUGINS,
  SafeSmartAccount,
  SignTypedDataVersion,
  SolanaWallet,
  TRANSACTION_ENVELOPE_TYPES,
  TRANSACTION_TYPES,
  TransactionFormatter,
  TrustSmartAccount,
  UX_MODE,
  WALLET_CONNECTORS,
  WALLET_PLUGINS,
  WEB3AUTH_NETWORK,
  WEB3AUTH_STATE_STORAGE_KEY,
  WIDGET_TYPE,
  WalletConnectV2Provider,
  WalletInitializationError,
  WalletLoginError,
  WalletOperationsError,
  WalletProviderError,
  WalletServicesPluginError,
  WalletStandardProvider,
  Web3Auth,
  Web3AuthContextKey,
  Web3AuthError,
  Web3AuthNoModal,
  accountAbstractionProvider,
  authConnector,
  checkIfTokenIsExpired,
  clearToken,
  cloneDeep,
  cookieToWeb3AuthState,
  createConfigMiddleware,
  createEthChainIdMiddleware,
  createEthChainSwitchMiddleware,
  createEthJsonRpcClient,
  createEthMiddleware,
  createEthProviderConfigMiddleware,
  createGenericJRPCMiddleware,
  createGetAccountsMiddleware,
  createGetPublicKeyMiddleware,
  createStore as createMipd,
  createRandomId,
  createRequestAccountsMiddleware,
  createSolanaAccountMiddleware,
  createSolanaChainIdMiddleware,
  createSolanaChainSwitchMiddleware,
  createSolanaJsonRpcClient,
  createSolanaMiddleware,
  getWallets as createSolanaMipd,
  createSolanaProviderConfigMiddleware,
  createWalletMiddleware,
  defaultConnectorsModalConfig,
  fetchEip1159GasEstimates,
  fetchLegacyGasPriceEstimates,
  fetchProjectConfig,
  fetchWalletRegistry,
  fromViemChain,
  fromWagmiChain,
  getAaAnalyticsProperties,
  getCaipChainId,
  getED25519Key,
  getErrorAnalyticsProperties,
  getHostname,
  getNamespacesFromChains,
  getRequiredNamespaces,
  getSavedToken,
  getSolanaChainByChainConfig,
  getSupportedEventsByNamespace,
  getSupportedMethodsByNamespace,
  getWalletConnectV2Settings,
  getWalletServicesAnalyticsProperties,
  getWhitelabelAnalyticsProperties,
  hasSolanaWalletStandardFeatures,
  injectedEvmConnector,
  isBrowser,
  isHexStrict,
  log,
  metaMaskConnector,
  nftCheckoutPlugin,
  normalizeGWEIDecimalNumbers,
  normalizeWalletName,
  saveToken,
  sdkVersion,
  signerHost,
  storageAvailable,
  toEoaProvider,
  validateAddress,
  validateTypedSignMessageDataV4,
  version,
  walletConnectV2Connector,
  walletRegistryUrl,
  walletServicesPlugin,
  walletStandardConnector,
  withAbort
};
