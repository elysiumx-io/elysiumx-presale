{
  "version": 3,
  "sources": ["../../fast-deep-equal/index.js", "../../@web3auth/ws-embed/dist/lib.esm/constants.js", "../../@web3auth/ws-embed/dist/lib.esm/baseProvider.js", "../../@web3auth/ws-embed/dist/lib.esm/isStream.js", "../../@web3auth/ws-embed/dist/lib.esm/messages.js", "../../@web3auth/ws-embed/dist/lib.esm/loglevel.js", "../../@web3auth/ws-embed/dist/lib.esm/utils.js", "../../@web3auth/ws-embed/dist/lib.esm/interfaces.js", "../../@web3auth/ws-embed/dist/lib.esm/PopupHandler.js", "../../@web3auth/ws-embed/dist/lib.esm/communicationProvider.js", "../../@web3auth/ws-embed/dist/lib.esm/embedUtils.js", "../../@web3auth/ws-embed/dist/lib.esm/inPageProvider.js", "../../@web3auth/ws-embed/dist/lib.esm/siteMetadata.js", "../../@web3auth/ws-embed/dist/lib.esm/embed.js"],
  "sourcesContent": ["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "// TODO: currently redefine solana method types in ws embed to avoid metaplex umi dependency from solana-controllers\n// remove this and import form solana-controllers once metaplex is removed\nconst SOLANA_METHOD_TYPES = {\n  GET_ACCOUNTS: \"getAccounts\",\n  SOLANA_REQUEST_ACCOUNTS: \"solana_requestAccounts\",\n  SEND_TRANSACTION: \"solana_sendTransaction\",\n  SIGN_TRANSACTION: \"solana_signTransaction\",\n  SIGN_ALL_TRANSACTIONS: \"solana_signAllTransactions\",\n  SIGN_MESSAGE: \"solana_signMessage\",\n  SOLANA_PRIVATE_KEY: \"solana_privateKey\",\n  PRIVATE_KEY: \"private_key\",\n  SOLANA_PUBLIC_KEY: \"solana_publicKey\",\n  PUBLIC_KEY: \"public_key\"\n};\nconst SOLANA_CHAIN_IDS = {\n  SOLANA_MAINNET: \"0x65\",\n  SOLANA_TESTNET: \"0x66\",\n  SOLANA_DEVNET: \"0x67\"\n};\nconst EVM_METHOD_TYPES = {\n  GET_ACCOUNTS: \"eth_accounts\",\n  ETH_TRANSACTION: \"eth_sendTransaction\",\n  ETH_ESTIMATE_AA_TRANSACTION_GAS: \"eth_estimateAATransactionGas\",\n  ETH_REQUEST_ACCOUNTS: \"eth_requestAccounts\",\n  ETH_SEND_RAW_TRANSACTION: \"eth_sendRawTransaction\",\n  ETH_SIGN: \"eth_sign\",\n  ETH_SIGN_TYPED_DATA_V4: \"eth_signTypedData_v4\",\n  PERSONAL_SIGN: \"personal_sign\",\n  ETH_GET_TRANSACTION_COUNT: \"eth_getTransactionCount\",\n  ETH_GET_TRANSACTION_BY_HASH: \"eth_getTransactionByHash\",\n  ETH_GET_TRANSACTION_RECEIPT: \"eth_getTransactionReceipt\",\n  WATCH_ASSET: \"wallet_watchAsset\",\n  ETH_GET_BLOCK_BY_HASH: \"eth_getBlockByHash\",\n  ETH_GET_CODE: \"eth_getCode\",\n  ETH_GET_GAS_PRICE: \"eth_gasPrice\",\n  ETH_PRIVATE_KEY: \"eth_privateKey\",\n  PRIVATE_KEY: \"private_key\",\n  ETH_PUBLIC_KEY: \"eth_publicKey\",\n  PUBLIC_KEY: \"public_key\",\n  SWITCH_CHAIN: \"wallet_switchEthereumChain\",\n  ADD_CHAIN: \"wallet_addEthereumChain\"\n};\n\nexport { EVM_METHOD_TYPES, SOLANA_CHAIN_IDS, SOLANA_METHOD_TYPES };\n", "import _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { createLoggerMiddleware } from '@toruslabs/base-controllers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, rpcErrors, getRpcPromiseCallback } from '@web3auth/auth';\nimport pump from 'pump';\nimport { isDuplexStream } from './isStream.js';\nimport messages from './messages.js';\nimport { createErrorMiddleware, logStreamDisconnectWarning } from './utils.js';\n\n/**\n * @param connectionStream - A Node.js duplex stream\n * @param opts - An options bag\n */\nclass BaseProvider extends SafeEventEmitter {\n  constructor(connectionStream, {\n    maxEventListeners = 100,\n    jsonRpcStreamName = \"provider\"\n  }) {\n    super();\n    _defineProperty(this, \"rpcEngine\", void 0);\n    _defineProperty(this, \"jsonRpcConnectionEvents\", void 0);\n    /**\n     * Indicating that this provider is a Web3Auth provider.\n     */\n    _defineProperty(this, \"isWeb3Auth\", void 0);\n    _defineProperty(this, \"state\", void 0);\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isWeb3Auth = true;\n    this.setMaxListeners(maxEventListeners);\n    this.handleConnect = this.handleConnect.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.handleStreamDisconnect = this.handleStreamDisconnect.bind(this);\n    this.rpcRequest = this.rpcRequest.bind(this);\n    this.initializeState = this.initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    this.send = this.send.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this.handleStreamDisconnect.bind(this, \"Web3Auth\"));\n\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this.handleStreamDisconnect.bind(this, \"Web3Auth RpcProvider\"));\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({\n      origin: location.origin\n    }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this.rpcEngine = rpcEngine;\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: _objectSpread(_objectSpread({}, args || {}), {}, {\n          cause: messages.errors.invalidRequestArgs()\n        })\n      });\n    }\n    const {\n      method,\n      params\n    } = args;\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: _objectSpread(_objectSpread({}, args || {}), {}, {\n          cause: messages.errors.invalidRequestArgs()\n        })\n      });\n    }\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: _objectSpread(_objectSpread({}, args || {}), {}, {\n          cause: messages.errors.invalidRequestArgs()\n        })\n      });\n    }\n    return new Promise((resolve, reject) => {\n      this.rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  send(payload, callback) {\n    this.rpcRequest(payload, callback);\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload) {\n    return new Promise((resolve, reject) => {\n      this.rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits InpageProvider#disconnect\n   */\n  handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n    this.handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits InPageProvider#connect\n   */\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits InpageProvider#disconnect\n   */\n}\n\nexport { BaseProvider as default };\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction isStream(stream) {\n  return stream !== null && typeof stream === \"object\" && typeof stream.pipe === \"function\";\n}\nfunction isWritableStream(stream) {\n  return isStream(stream) && stream.writable !== false && typeof stream._write === \"function\" && typeof stream._writableState === \"object\";\n}\nfunction isReadableStream(stream) {\n  return isStream(stream) && stream.readable !== false && typeof stream._read === \"function\" && typeof stream._readableState === \"object\";\n}\nfunction isDuplexStream(stream) {\n  return isWritableStream(stream) && isReadableStream(stream);\n}\n\nexport { isDuplexStream, isReadableStream, isStream, isWritableStream };\n", "var messages = {\n  errors: {\n    disconnected: () => \"Web3Auth: Lost connection to Web3Auth.\",\n    permanentlyDisconnected: () => \"Web3Auth: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: method => `Web3Auth: The Web3Auth Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: maxEventListeners => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}}`,\n    invalidRequestArgs: () => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: () => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: () => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: () => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: method => `'args.logger' must include required method '${method}'.`\n  },\n  info: {\n    connected: chainId => `Web3Auth: Connected to chain with ID \"${chainId}\".`\n  }};\n\nexport { messages as default };\n", "import loglevel from 'loglevel';\n\nvar log = loglevel.getLogger(\"ws-embed\");\n\nexport { log as default };\n", "import _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport { rpcErrors } from '@web3auth/auth';\nimport log from './loglevel.js';\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = rpcErrors.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: _objectSpread(_objectSpread({}, req || {}), {}, {\n          cause: `The request 'method' must be a non-empty string.`\n        })\n      });\n    }\n    next(done => {\n      const {\n        error\n      } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`Ws-Embed - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = `Web3Auth: Lost connection to \"${remoteLabel}\".`;\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\n\nexport { EMITTED_NOTIFICATIONS, createErrorMiddleware, logStreamDisconnectWarning };\n", "export { CONFIRMATION_STRATEGY } from '@toruslabs/base-controllers';\n\nconst WS_EMBED_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  STAGING: \"staging\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\n\nexport { BUTTON_POSITION, WS_EMBED_BUILD_ENV };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { getPopupFeatures, FEATURES_DEFAULT_POPUP_WINDOW } from '@toruslabs/base-controllers';\nimport { SafeEventEmitter } from '@web3auth/auth';\n\nclass PopupHandler extends SafeEventEmitter {\n  constructor({\n    url,\n    target,\n    features,\n    timeout = 30000\n  }) {\n    super();\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"target\", void 0);\n    _defineProperty(this, \"features\", void 0);\n    _defineProperty(this, \"window\", void 0);\n    _defineProperty(this, \"windowTimer\", void 0);\n    _defineProperty(this, \"iClosedWindow\", void 0);\n    _defineProperty(this, \"timeout\", void 0);\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this.timeout = timeout;\n    this._setupTimer();\n  }\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n        setTimeout(() => {\n          if (!this.iClosedWindow) {\n            this.emit(\"close\");\n          }\n          this.iClosedWindow = false;\n          this.window = undefined;\n        }, this.timeout);\n      }\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n  open() {\n    var _this$window;\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n  }\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport { PopupHandler as default };\n", "import _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS } from '@toruslabs/base-controllers';\nimport { EthereumProviderError } from '@web3auth/auth';\nimport BaseProvider from './baseProvider.js';\nimport { BUTTON_POSITION } from './interfaces.js';\nimport log from './loglevel.js';\nimport messages from './messages.js';\nimport PopupHandler from './PopupHandler.js';\n\n/**\n * @param connectionStream - A Node.js duplex stream\n * @param  opts - An options bag\n */\nclass CommunicationProvider extends BaseProvider {\n  constructor(connectionStream, {\n    maxEventListeners = 100,\n    jsonRpcStreamName = \"provider\"\n  }, state) {\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    });\n\n    // private state\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n    _defineProperty(this, \"windowRefs\", void 0);\n    _defineProperty(this, \"iframeUrl\", void 0);\n    _defineProperty(this, \"iframeId\", void 0);\n    this.state = _objectSpread(_objectSpread({}, CommunicationProvider.defaultState), state);\n\n    // public state\n    this.iframeUrl = \"\";\n    this.iframeId = \"\";\n    this.windowRefs = new Map();\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this.state.isConnected = true;\n    });\n    const notificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n      // create_window should never come here..\n      // we either pre-open from embed.\n      // if it's blocked, we communicate down that it's blocked and we show full screen iframe and open from iframe\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const {\n          isFullScreen,\n          rid\n        } = params;\n        this.displayIframe({\n          isFull: isFullScreen,\n          rid: rid\n        }, true);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this.handleCloseWindow(params);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const {\n          currentAuthConnection\n        } = params;\n        this.state.isLoggedIn = true;\n        this.state.currentAuthConnection = currentAuthConnection;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this.state.isLoggedIn = false;\n        this.state.currentAuthConnection = null;\n        this.displayIframe({\n          isFull: false\n        }, true);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.TOGGLE_WIDGET_BUTTON) {\n        const {\n          show\n        } = params;\n        this.state.widgetVisibility = show;\n        this.displayIframe();\n      } else if (method === COMMUNICATION_NOTIFICATIONS.ALLOW_WALLET_SERVICE) {\n        const {\n          allow\n        } = params;\n        this.state.allowWalletService = allow;\n      }\n    };\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n  get isLoggedIn() {\n    return this.state.isLoggedIn;\n  }\n  get isIFrameFullScreen() {\n    return this.state.isIFrameFullScreen;\n  }\n  get allowWalletService() {\n    return this.state.allowWalletService;\n  }\n\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n  isConnected() {\n    return this.state.isConnected;\n  }\n  async initializeState(params) {\n    try {\n      const {\n        torusUrl,\n        torusIframeId\n      } = params;\n      this.iframeUrl = torusUrl;\n      this.iframeId = torusIframeId;\n      const {\n        currentAuthConnection,\n        isLoggedIn\n      } = await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      });\n\n      // indicate that we've connected, for EIP-1193 compliance\n      if (isLoggedIn) this.handleConnect(currentAuthConnection, isLoggedIn);\n    } catch (error) {\n      log.error(\"Web3Auth: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this.state.initialized = true;\n    }\n  }\n  displayIframe({\n    isFull = false,\n    rid = \"\"\n  } = {}, walletRequest = false) {\n    const style = {};\n    // set phase\n    if (!isFull) {\n      style.display = this.state.widgetVisibility ? \"block\" : \"none\";\n      style.height = this.state.widgetVisibility ? \"70px\" : \"0px\";\n      style.width = this.state.widgetVisibility ? \"70px\" : \"0px\";\n      switch (this.state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    const iframe = document.getElementById(this.iframeId);\n    Object.assign(iframe.style, style);\n    this.state.isIFrameFullScreen = isFull;\n    if (!walletRequest) {\n      this.request({\n        method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n        params: {\n          isIFrameFullScreen: isFull,\n          rid\n        }\n      });\n    }\n  }\n\n  /**\n   * Scenarios:\n   * - Login request or pre-open confirmation windows\n   * We try to open here or send a rpc request to iframe that window is blocked.\n   */\n  async handleWindow(windowId, {\n    url,\n    target,\n    features,\n    timeout\n  } = {}) {\n    const finalUrl = new URL(url || `${this.iframeUrl}/redirect?windowId=${windowId}&sessionNamespace=${window.location.hostname}`);\n    const handledWindow = new PopupHandler({\n      url: finalUrl,\n      target,\n      features,\n      timeout\n    });\n    handledWindow.open();\n    if (!handledWindow.window) {\n      this.displayIframe({\n        isFull: true\n      });\n      this.request({\n        method: COMMUNICATION_JRPC_METHODS.WINDOW_BLOCKED,\n        params: {\n          windowId,\n          finalUrl: finalUrl.href\n        }\n      });\n      return;\n    }\n    // Add to collection only if window is opened\n    this.windowRefs.set(windowId, handledWindow);\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      this.windowRefs.delete(windowId);\n      this.request({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: {\n          windowId\n        }\n      });\n    });\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  rpcRequest(payload, callback) {\n    const cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n    this.rpcEngine.handle(_payload, cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentAuthConnection - The auth connection\n   * emits TorusInpageProvider#connect\n   */\n  handleConnect(currentAuthConnection, isLoggedIn) {\n    if (!this.state.isConnected) {\n      this.state.isConnected = true;\n      this.emit(\"connect\", {\n        currentAuthConnection,\n        isLoggedIn\n      });\n      log.debug(messages.info.connected(currentAuthConnection));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  handleDisconnect(isRecoverable, errorMessage) {\n    if (this.state.isConnected || !this.state.isPermanentlyDisconnected && !isRecoverable) {\n      this.state.isConnected = false;\n      let error;\n      if (isRecoverable) {\n        error = new EthereumProviderError(1013,\n        // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumProviderError(1011,\n        // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.state.currentAuthConnection = null;\n        this.state.isLoggedIn = false;\n        this.state.widgetVisibility = false;\n        this.state.isIFrameFullScreen = false;\n        this.state.isPermanentlyDisconnected = true;\n      }\n      this.emit(\"disconnect\", error);\n    }\n  }\n  handleCloseWindow(params) {\n    const {\n      windowId\n    } = params;\n    if (this.windowRefs.has(windowId)) {\n      this.windowRefs.get(windowId).close();\n      this.windowRefs.delete(windowId);\n    }\n  }\n}\n_defineProperty(CommunicationProvider, \"defaultState\", {\n  buttonPosition: \"bottom-left\",\n  currentAuthConnection: null,\n  isIFrameFullScreen: false,\n  widgetVisibility: false,\n  initialized: false,\n  isLoggedIn: false,\n  isPermanentlyDisconnected: false,\n  isConnected: false,\n  hasEmittedConnection: false,\n  allowWalletService: false\n});\n\nexport { CommunicationProvider as default };\n", "const htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nexport { htmlToElement };\n", "import _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from '@toruslabs/base-controllers';\nimport { EthereumProviderError } from '@web3auth/auth';\nimport dequal from 'fast-deep-equal';\nimport BaseProvider from './baseProvider.js';\nimport { EVM_METHOD_TYPES, SOLANA_METHOD_TYPES } from './constants.js';\nimport log from './loglevel.js';\nimport messages from './messages.js';\nimport { EMITTED_NOTIFICATIONS } from './utils.js';\n\n/**\n * @param connectionStream - A Node.js duplex stream\n * @param opts - An options bag\n */\nclass TorusInPageProvider extends BaseProvider {\n  constructor(connectionStream, {\n    maxEventListeners = 100,\n    jsonRpcStreamName = \"provider\"\n  }) {\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    });\n\n    // private state\n    /**\n     * The chain ID of the currently connected EVM chain.\n     * See [chainId.network]{@link https://chainid.network} for more information.\n     */\n    _defineProperty(this, \"chainId\", void 0);\n    /**\n     * The user's currently selected EVM address.\n     * If null, Torus is either locked or the user has not permitted any\n     * addresses to be viewed.\n     */\n    _defineProperty(this, \"selectedAddress\", void 0);\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n    this.state = _objectSpread({}, TorusInPageProvider.defaultState);\n\n    // public state\n    this.selectedAddress = null;\n    this.chainId = null;\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\n    this.handleChainChanged = this.handleChainChanged.bind(this);\n    this.handleUnlockStateChanged = this.handleUnlockStateChanged.bind(this);\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this.state.isConnected = true;\n    });\n    const jsonRpcNotificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this.handleAccountsChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this.handleUnlockStateChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this.handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(method)) {\n        this.emit(\"data\", payload);\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      }\n    };\n\n    // json rpc notification listener\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected() {\n    return this.state.isConnected;\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked\n      } = await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      });\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", {\n        chainId\n      });\n      this.handleChainChanged({\n        chainId\n      });\n      this.handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n      this.handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"WsEmbed: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this.state.initialized = true;\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  rpcRequest(payload, callback, isInternal = false) {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n      if ([EVM_METHOD_TYPES.GET_ACCOUNTS, EVM_METHOD_TYPES.ETH_REQUEST_ACCOUNTS, SOLANA_METHOD_TYPES.SOLANA_REQUEST_ACCOUNTS, SOLANA_METHOD_TYPES.GET_ACCOUNTS].includes(_payload.method)) {\n        // handle accounts changing\n        cb = (err, res) => {\n          this.handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this.rpcEngine.handle(payload, cb);\n        return;\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n  handleConnect(chainId) {\n    if (!this.state.isConnected) {\n      this.state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  handleDisconnect(isRecoverable, errorMessage) {\n    if (this.state.isConnected || !this.state.isPermanentlyDisconnected && !isRecoverable) {\n      this.state.isConnected = false;\n      let error;\n      if (isRecoverable) {\n        error = new EthereumProviderError(1013,\n        // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumProviderError(1011,\n        // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this.state.accounts = null;\n        this.selectedAddress = null;\n        this.state.isUnlocked = false;\n        this.state.isPermanentlyDisconnected = true;\n      }\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  handleAccountsChanged(accounts, isEthAccounts = false, isInternal = false) {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"WsEmbed: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"WsEmbed: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this.state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this.state.accounts) && this.state.accounts.length > 0 && !isInternal) {\n        log.error('WsEmbed: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n      this.state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  handleChainChanged({\n    chainId\n  } = {}) {\n    if (!chainId) {\n      log.error(\"WsEmbed: Received invalid network parameters. Please report this bug.\", {\n        chainId\n      });\n      return;\n    }\n    if (chainId === \"loading\") {\n      this.handleDisconnect(true);\n    } else {\n      this.handleConnect(chainId);\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this.state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  handleUnlockStateChanged({\n    accounts,\n    isUnlocked\n  } = {}) {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"WsEmbed: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n    if (isUnlocked !== this.state.isUnlocked) {\n      this.state.isUnlocked = isUnlocked;\n      this.handleAccountsChanged(accounts || []);\n    }\n  }\n}\n_defineProperty(TorusInPageProvider, \"defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\nexport { TorusInPageProvider as default };\n", "/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns whether the image exists\n */\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window) {\n  try {\n    const {\n      document\n    } = window;\n\n    // Use the site's favicon if it exists\n    let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    // Search through available icons in no particular order\n    icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n    return \"\";\n  } catch {\n    return \"\";\n  }\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n\nexport { getSiteMetadata as default };\n", "import _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { randomId, CONFIRMATION_STRATEGY, SETUP_COMPLETE, COMMUNICATION_JRPC_METHODS, getPopupFeatures, FEATURES_CONFIRM_WINDOW, FEATURES_PROVIDER_CHANGE_WINDOW, PROVIDER_JRPC_METHODS } from '@toruslabs/base-controllers';\nimport { THEME_MODES, getRpcPromiseCallback, BasePostMessageStream } from '@web3auth/auth';\nimport CommunicationProvider from './communicationProvider.js';\nimport { SOLANA_CHAIN_IDS, SOLANA_METHOD_TYPES, EVM_METHOD_TYPES } from './constants.js';\nimport { htmlToElement } from './embedUtils.js';\nimport TorusInPageProvider from './inPageProvider.js';\nimport { WS_EMBED_BUILD_ENV, BUTTON_POSITION } from './interfaces.js';\nimport log from './loglevel.js';\nimport getSiteMetadata from './siteMetadata.js';\n\n// don't use destructuring for process.env cause it messes up webpack env plugin\nconst version = \"5.0.17\";\nconst addedVersion = `v${version.split(\".\")[0]}` ;\nconst WALLET_URLS_DEFAULT = {\n  [WS_EMBED_BUILD_ENV.TESTING]: {\n    url: \"https://develop-wallet.web3auth.io\",\n    logLevel: \"debug\"\n  },\n  [WS_EMBED_BUILD_ENV.DEVELOPMENT]: {\n    url: \"http://localhost:4050\",\n    logLevel: \"debug\"\n  },\n  [WS_EMBED_BUILD_ENV.STAGING]: {\n    url: `https://staging-wallet.web3auth.io/${addedVersion}`,\n    logLevel: \"debug\"\n  },\n  [WS_EMBED_BUILD_ENV.PRODUCTION]: {\n    url: `https://wallet.web3auth.io/${addedVersion}`,\n    logLevel: \"error\"\n  }\n};\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      url: torusUrl\n    } = WALLET_URLS_DEFAULT.production;\n    torusIframeHtml.href = `${torusUrl}/frame`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\nnew Set([COMMUNICATION_JRPC_METHODS.SET_PROVIDER]);\nconst PROVIDER_UNSAFE_METHODS = new Set([SOLANA_METHOD_TYPES.SEND_TRANSACTION, SOLANA_METHOD_TYPES.SIGN_MESSAGE, SOLANA_METHOD_TYPES.SIGN_TRANSACTION, SOLANA_METHOD_TYPES.SIGN_ALL_TRANSACTIONS, EVM_METHOD_TYPES.ETH_SIGN, EVM_METHOD_TYPES.ETH_SIGN_TYPED_DATA_V4, EVM_METHOD_TYPES.PERSONAL_SIGN, EVM_METHOD_TYPES.ETH_TRANSACTION, EVM_METHOD_TYPES.ADD_CHAIN, EVM_METHOD_TYPES.SWITCH_CHAIN, PROVIDER_JRPC_METHODS.WALLET_SWITCH_CHAIN]);\nclass WsEmbed {\n  constructor({\n    modalZIndex = 99999,\n    web3AuthClientId,\n    web3AuthNetwork\n  }) {\n    _defineProperty(this, \"isInitialized\", void 0);\n    _defineProperty(this, \"modalZIndex\", void 0);\n    _defineProperty(this, \"provider\", void 0);\n    _defineProperty(this, \"communicationProvider\", void 0);\n    _defineProperty(this, \"buttonPosition\", void 0);\n    _defineProperty(this, \"web3AuthClientId\", void 0);\n    _defineProperty(this, \"web3AuthNetwork\", void 0);\n    _defineProperty(this, \"isPluginMode\", void 0);\n    _defineProperty(this, \"confirmationStrategy\", void 0);\n    _defineProperty(this, \"buildEnv\", void 0);\n    _defineProperty(this, \"embedNonce\", randomId());\n    this.isInitialized = false; // init done\n    this.modalZIndex = modalZIndex;\n    this.web3AuthClientId = web3AuthClientId;\n    this.web3AuthNetwork = web3AuthNetwork;\n  }\n  get isLoggedIn() {\n    var _this$communicationPr;\n    return ((_this$communicationPr = this.communicationProvider) === null || _this$communicationPr === void 0 ? void 0 : _this$communicationPr.isLoggedIn) || false;\n  }\n  get getBuildEnv() {\n    return this.buildEnv;\n  }\n  async init({\n    buildEnv = WS_EMBED_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    chains,\n    chainId,\n    walletUrls,\n    whiteLabel,\n    confirmationStrategy = CONFIRMATION_STRATEGY.DEFAULT,\n    accountAbstractionConfig,\n    enableKeyExport = false\n  }) {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    this.buildEnv = buildEnv;\n    this.confirmationStrategy = confirmationStrategy;\n    const {\n      url: torusUrl,\n      logLevel\n    } = walletUrls && walletUrls[buildEnv] ? _objectSpread(_objectSpread({}, WALLET_URLS_DEFAULT[buildEnv]), walletUrls[buildEnv]) : WALLET_URLS_DEFAULT[buildEnv];\n    log.info(torusUrl, \"url loaded\");\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";else torusIframeUrl.pathname += \"/frame\";\n    const hashParams = new URLSearchParams();\n    hashParams.append(\"origin\", window.location.origin);\n    hashParams.append(\"nonce\", this.embedNonce);\n    torusIframeUrl.hash = hashParams.toString();\n    const colorScheme = this.getTheme((whiteLabel === null || whiteLabel === void 0 ? void 0 : whiteLabel.mode) || THEME_MODES.light);\n\n    // sandbox=\"allow-popups allow-scripts allow-same-origin\"\n    // Iframe code\n    const walletIframe = htmlToElement(`<iframe\n        id=\"walletIframe-${this.embedNonce}\"\n        class=\"walletIframe-${this.embedNonce}\"\n        sandbox=\"allow-popups allow-scripts allow-same-origin allow-forms allow-modals allow-downloads\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex.toString()};\n        color-scheme: ${colorScheme}\"\n        allow=\"clipboard-write\"\n      ></iframe>`);\n    this.buttonPosition = (whiteLabel === null || whiteLabel === void 0 ? void 0 : whiteLabel.buttonPosition) || BUTTON_POSITION.BOTTOM_LEFT;\n    const dappMetadata = await getSiteMetadata();\n    return new Promise((resolve, reject) => {\n      try {\n        window.document.body.appendChild(walletIframe);\n        // Wait for iframe to send ready\n        const handleMessage = async ev => {\n          if (ev.origin !== torusIframeUrl.origin) return;\n          const {\n            message,\n            nonce\n          } = ev.data || {};\n          if (message === SETUP_COMPLETE && nonce === this.embedNonce) {\n            window.removeEventListener(\"message\", handleMessage);\n            // send init params here\n            walletIframe.contentWindow.postMessage({\n              chains,\n              chainId,\n              dappMetadata,\n              enableLogging,\n              web3AuthClientId: this.web3AuthClientId,\n              web3AuthNetwork: this.web3AuthNetwork,\n              whiteLabel,\n              confirmationStrategy,\n              accountAbstractionConfig,\n              enableKeyExport\n            }, torusIframeUrl.origin);\n            await this.setupWeb3({\n              torusUrl,\n              walletIframe\n            });\n            this.isInitialized = true;\n            resolve();\n          }\n        };\n        window.addEventListener(\"message\", handleMessage);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n  async login(params = {}) {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    const isAlreadyFullScreen = this.communicationProvider.isIFrameFullScreen;\n    try {\n      if (!params.authConnection && !isAlreadyFullScreen) {\n        this.communicationProvider.displayIframe({\n          isFull: true\n        });\n      }\n\n      // If user is already logged in, we assume they have given access to the website\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        const isSolana = Object.values(SOLANA_CHAIN_IDS).includes(this.provider.chainId);\n        const method = isSolana ? SOLANA_METHOD_TYPES.SOLANA_REQUEST_ACCOUNTS : EVM_METHOD_TYPES.ETH_REQUEST_ACCOUNTS;\n        this.provider.rpcRequest({\n          method,\n          params: [params.authConnection, params.login_hint]\n        }, getRpcPromiseCallback(resolve, reject));\n      });\n      log.info(\"check: res\", res);\n      if (Array.isArray(res) && res.length > 0) {\n        if (this.confirmationStrategy === CONFIRMATION_STRATEGY.AUTO_APPROVE) log.warn(\"Confirmation strategy auto approve is not allowed on Embed Mode, using Default instead.\");\n        return res;\n      }\n      // This would never happen, but just in case\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      if (!isAlreadyFullScreen) this.communicationProvider.displayIframe({\n        isFull: false\n      });\n    }\n  }\n  async loginWithSessionId(params) {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    if (!params.sessionId) throw new Error(\"sessionId is required\");\n    try {\n      const res = await this.communicationProvider.request({\n        method: COMMUNICATION_JRPC_METHODS.LOGIN_WITH_SESSION_ID,\n        params: [params.sessionId, params.sessionNamespace || \"\"]\n      });\n      log.info(\"check: res\", res);\n      if (res.success) {\n        this.isPluginMode = true;\n        if (this.confirmationStrategy === CONFIRMATION_STRATEGY.POPUP) log.warn(\"Confirmation strategy popup is not allowed on Plugin Mode, using Default instead.\");\n        return res.success;\n      }\n      // This should never happen, but just in case\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login with session id failed\", error);\n      throw error;\n    }\n  }\n  async logout() {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: []\n    });\n  }\n  async cleanUp() {\n    var _this$communicationPr2;\n    if ((_this$communicationPr2 = this.communicationProvider) !== null && _this$communicationPr2 !== void 0 && _this$communicationPr2.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof Document;\n    }\n    const walletIframe = window.document.getElementById(`walletIframe-${this.embedNonce}`);\n    if (isElement(walletIframe)) {\n      walletIframe.remove();\n    }\n    this.isInitialized = false;\n  }\n  async getUserInfo() {\n    const userInfoResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: []\n    });\n    return userInfoResponse;\n  }\n  async showWalletConnectScanner(showWalletConnectParams) {\n    const isShow = showWalletConnectParams ? showWalletConnectParams.show : true;\n    this.communicationProvider.displayIframe({\n      isFull: isShow\n    });\n    try {\n      await this.communicationProvider.request({\n        method: COMMUNICATION_JRPC_METHODS.SHOW_WALLET_CONNECT,\n        params: showWalletConnectParams\n      });\n    } catch {\n      this.communicationProvider.displayIframe({\n        isFull: false\n      });\n    }\n  }\n  async showWalletUi(showWalletUiParams) {\n    const isShow = showWalletUiParams ? showWalletUiParams.show : true;\n    this.communicationProvider.displayIframe({\n      isFull: isShow\n    });\n    try {\n      await this.communicationProvider.request({\n        method: COMMUNICATION_JRPC_METHODS.SHOW_WALLET_UI,\n        params: showWalletUiParams\n      });\n    } catch {\n      this.communicationProvider.displayIframe({\n        isFull: false\n      });\n    }\n  }\n  async showCheckout(showCheckoutParams) {\n    const isShow = showCheckoutParams ? showCheckoutParams.show : true;\n    this.communicationProvider.displayIframe({\n      isFull: isShow\n    });\n    try {\n      await this.communicationProvider.request({\n        method: COMMUNICATION_JRPC_METHODS.SHOW_CHECKOUT,\n        params: showCheckoutParams\n      });\n    } catch {\n      this.communicationProvider.displayIframe({\n        isFull: false\n      });\n    }\n  }\n  async showSwap(shoSwapParams) {\n    const isShow = shoSwapParams ? shoSwapParams.show : true;\n    this.communicationProvider.displayIframe({\n      isFull: isShow\n    });\n    try {\n      await this.communicationProvider.request({\n        method: COMMUNICATION_JRPC_METHODS.SHOW_SWAP,\n        params: shoSwapParams\n      });\n    } catch {\n      this.communicationProvider.displayIframe({\n        isFull: false\n      });\n    }\n  }\n  getConfirmationStrategyFinal(payload) {\n    let confirmationStrategyFinal = this.confirmationStrategy;\n    if (!Array.isArray(payload) && PROVIDER_UNSAFE_METHODS.has(payload.method) && this.confirmationStrategy !== CONFIRMATION_STRATEGY.MODAL && !this.isPluginMode) {\n      confirmationStrategyFinal = CONFIRMATION_STRATEGY.POPUP;\n    }\n    return confirmationStrategyFinal;\n  }\n  getTheme(theme) {\n    if (theme === THEME_MODES.light) return \"light\";\n    if (theme === THEME_MODES.dark) return \"dark\";\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n  }\n  async setupWeb3(providerParams) {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: providerParams.walletIframe.contentWindow,\n      targetOrigin: new URL(providerParams.torusUrl).origin\n    });\n\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: providerParams.walletIframe.contentWindow,\n      targetOrigin: new URL(providerParams.torusUrl).origin\n    });\n\n    // compose the inPage provider\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new CommunicationProvider(communicationStream, {}, {\n      buttonPosition: this.buttonPosition\n    });\n    inPageProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n      const confirmationStrategyFinal = this.getConfirmationStrategyFinal(payload);\n      const {\n        allowWalletService\n      } = communicationProvider;\n      if (confirmationStrategyFinal === CONFIRMATION_STRATEGY.POPUP && allowWalletService) {\n        const windowId = randomId();\n        communicationProvider.handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n          timeout: 500\n        });\n        // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n        _payload.windowId = windowId;\n      }\n      inPageProvider.rpcEngine.handle(_payload, cb);\n    };\n    communicationProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n      const confirmationStrategyFinal = this.getConfirmationStrategyFinal(payload);\n      const {\n        allowWalletService\n      } = communicationProvider;\n      if (confirmationStrategyFinal === CONFIRMATION_STRATEGY.POPUP && allowWalletService) {\n        const windowId = randomId();\n        communicationProvider.handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW),\n          // todo: are these features generic for all\n          timeout: 500\n        });\n        // for communication methods sending window id in jrpc req params\n        _payload.params.windowId = windowId;\n      }\n      communicationProvider.rpcEngine.handle(_payload, cb);\n    };\n\n    // detect requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inPageProvider[m];\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const self = this;\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const {\n          method,\n          params = []\n        } = request;\n        if (method === EVM_METHOD_TYPES.ETH_REQUEST_ACCOUNTS || method === SOLANA_METHOD_TYPES.SOLANA_REQUEST_ACCOUNTS) {\n          if (!cb) return self.login({\n            authConnection: params[0]\n          });\n          self.login({\n            authConnection: params[0]\n          })\n          // eslint-disable-next-line promise/no-callback-in-promise\n          .then(res => cb(null, res))\n          // eslint-disable-next-line promise/no-callback-in-promise\n          .catch(err => cb(err));\n        }\n        return originalMethod.apply(this, [request, cb]);\n      };\n    };\n\n    // Detects call to requestAccounts in request & sendAsync and passes to login\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n    log.info(\"test setupWeb3 \");\n    await Promise.all([inPageProvider.initializeState(), communicationProvider.initializeState(_objectSpread(_objectSpread({}, providerParams), {}, {\n      torusIframeId: providerParams.walletIframe.id\n    }))]);\n    log.debug(\"WsEmbed - injected provider\");\n  }\n}\n\nexport { PROVIDER_UNSAFE_METHODS, WsEmbed as default, version };\n"],
  "mappings": "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",
  "names": ["loglevel", "pump", "dequal", "window", "document"]
}
