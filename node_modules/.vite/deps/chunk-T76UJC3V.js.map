{
  "version": 3,
  "sources": ["../../@web3auth/no-modal/dist/lib.esm/providers/base-provider/jrpcClient.js", "../../@web3auth/no-modal/dist/lib.esm/providers/base-provider/CommonJRPCProvider.js", "../../@web3auth/no-modal/dist/lib.esm/providers/base-provider/commonPrivateKeyProvider.js"],
  "sourcesContent": ["import { createFetchMiddleware } from '@toruslabs/base-controllers';\nimport { mergeMiddleware } from '@web3auth/auth';\n\nfunction createChainIdMiddleware(chainId) {\n  return (req, res, next, end) => {\n    if (req.method === \"chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\nfunction createProviderConfigMiddleware(providerConfig) {\n  return (req, res, next, end) => {\n    if (req.method === \"provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\nfunction createJsonRpcClient(providerConfig) {\n  const {\n    chainId,\n    rpcTarget\n  } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({\n    rpcTarget\n  });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return {\n    networkMiddleware,\n    fetchMiddleware\n  };\n}\n\nexport { createChainIdMiddleware, createJsonRpcClient, createProviderConfigMiddleware };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { providerErrors, JRPCEngine, providerFromEngine } from '@web3auth/auth';\nimport { BaseProvider } from './baseProvider.js';\nimport { createJsonRpcClient } from './jrpcClient.js';\n\nvar _CommonJRPCProvider;\nclass CommonJRPCProvider extends BaseProvider {\n  constructor({\n    config,\n    state\n  }) {\n    super({\n      config,\n      state\n    });\n  }\n  async setupProvider(chainId) {\n    const chain = this.getChain(chainId);\n    if (!chain) throw providerErrors.custom({\n      message: \"Chain not found\",\n      code: 4902\n    });\n    const {\n      networkMiddleware\n    } = createJsonRpcClient(chain);\n    const engine = new JRPCEngine();\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    this.emit(\"chainChanged\", chainId);\n    this.emit(\"connect\", {\n      chainId\n    });\n    this.update({\n      chainId\n    });\n  }\n  async switchChain(params) {\n    if (!this._providerEngineProxy) throw providerErrors.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const newChainId = params.chainId;\n    if (this.chainId === newChainId) return;\n    this.update({\n      chainId: \"loading\"\n    });\n    await this.setupProvider(newChainId);\n  }\n  getProviderEngineProxy() {\n    return this._providerEngineProxy;\n  }\n  lookupNetwork() {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n_CommonJRPCProvider = CommonJRPCProvider;\n_defineProperty(CommonJRPCProvider, \"getProviderInstance\", async params => {\n  const providerFactory = new _CommonJRPCProvider({\n    config: {\n      chain: params.chain,\n      chains: params.chains\n    }\n  });\n  const {\n    chainId\n  } = params.chain;\n  await providerFactory.setupProvider(chainId);\n  return providerFactory;\n});\n\nexport { CommonJRPCProvider };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { JRPCEngine, providerFromEngine, createScaffoldMiddleware, createAsyncMiddleware } from '@web3auth/auth';\nimport { BaseProvider } from './baseProvider.js';\n\nvar _CommonPrivateKeyProvider;\nclass CommonPrivateKeyProvider extends BaseProvider {\n  constructor({\n    config,\n    state\n  }) {\n    super({\n      config,\n      state\n    });\n    // should be Assigned in setupProvider\n    _defineProperty(this, \"_providerEngineProxy\", null);\n  }\n  get provider() {\n    return this._providerEngineProxy;\n  }\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async setupProvider(privKey) {\n    const privKeyMiddleware = this.getPrivKeyMiddleware(privKey);\n    const engine = new JRPCEngine();\n    engine.push(privKeyMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n  }\n  async switchChain(_) {\n    return Promise.resolve();\n  }\n  getProviderEngineProxy() {\n    return this._providerEngineProxy;\n  }\n  async lookupNetwork() {\n    return Promise.resolve(\"\");\n  }\n  getPrivKeyMiddleware(privKey) {\n    const middleware = {\n      getPrivatekey: async () => {\n        if (!this.config.keyExportEnabled) throw new Error(\"Exporting private key is disabled. Please enable it in the provider config\");\n        return privKey;\n      }\n    };\n    return this.createPrivKeyMiddleware(middleware);\n  }\n  createPrivKeyMiddleware({\n    getPrivatekey\n  }) {\n    async function getPrivatekeyHandler(_, res) {\n      try {\n        res.result = await getPrivatekey();\n      } catch (error) {\n        res.error = error instanceof Error ? error.message : error;\n      }\n    }\n    return createScaffoldMiddleware({\n      private_key: createAsyncMiddleware(getPrivatekeyHandler)\n    });\n  }\n}\n_CommonPrivateKeyProvider = CommonPrivateKeyProvider;\n_defineProperty(CommonPrivateKeyProvider, \"getProviderInstance\", async params => {\n  const providerFactory = new _CommonPrivateKeyProvider({\n    config: {\n      chain: params.chain,\n      chains: params.chains\n    }\n  });\n  await providerFactory.setupProvider(params.privKey);\n  return providerFactory;\n});\n\nexport { CommonPrivateKeyProvider };\n"],
  "mappings": "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",
  "names": []
}
