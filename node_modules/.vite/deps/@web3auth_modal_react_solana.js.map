{
  "version": 3,
  "sources": ["../../@web3auth/modal/dist/lib.esm/packages/modal/src/react/solana/hooks/useSignAndSendTransaction.js", "../../@web3auth/modal/dist/lib.esm/packages/modal/src/react/solana/hooks/useSolanaWallet.js", "../../@web3auth/modal/dist/lib.esm/packages/modal/src/react/solana/hooks/useSignMessage.js", "../../@web3auth/modal/dist/lib.esm/packages/modal/src/react/solana/hooks/useSignTransaction.js"],
  "sourcesContent": ["import { WalletInitializationError } from '@web3auth/no-modal';\nimport { useState, useCallback } from 'react';\nimport { useSolanaWallet } from './useSolanaWallet.js';\n\nconst useSignAndSendTransaction = () => {\n  const {\n    solanaWallet\n  } = useSolanaWallet();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const signAndSendTransaction = useCallback(async transaction => {\n    setLoading(true);\n    setError(null);\n    try {\n      if (!solanaWallet) throw WalletInitializationError.notReady();\n      const signature = await solanaWallet.signAndSendTransaction(transaction);\n      setData(signature);\n      return signature;\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [solanaWallet]);\n  return {\n    loading,\n    error,\n    data,\n    signAndSendTransaction\n  };\n};\n\nexport { useSignAndSendTransaction };\n", "import { Connection } from '@solana/web3.js';\nimport { SolanaWallet, CHAIN_NAMESPACES } from '@web3auth/no-modal';\nimport { useState, useMemo, useEffect } from 'react';\nimport { useWeb3Auth } from '../../hooks/useWeb3Auth.js';\n\nconst useSolanaWallet = () => {\n  const {\n    provider,\n    web3Auth\n  } = useWeb3Auth();\n  const [accounts, setAccounts] = useState(null);\n  const solanaWallet = useMemo(() => {\n    if (!provider) return null;\n    return new SolanaWallet(provider);\n  }, [provider]);\n  const connection = useMemo(() => {\n    if (!web3Auth || !provider) return null;\n    return new Connection(web3Auth.currentChain.rpcTarget);\n  }, [web3Auth, provider]);\n  useEffect(() => {\n    const init = async () => {\n      var _web3Auth$currentChai;\n      if (!(web3Auth !== null && web3Auth !== void 0 && (_web3Auth$currentChai = web3Auth.currentChain) !== null && _web3Auth$currentChai !== void 0 && _web3Auth$currentChai.chainNamespace) || web3Auth.currentChain.chainNamespace !== CHAIN_NAMESPACES.SOLANA) {\n        return;\n      }\n      if (!solanaWallet) return;\n      const accounts = await solanaWallet.getAccounts();\n      if ((accounts === null || accounts === void 0 ? void 0 : accounts.length) > 0) {\n        setAccounts(accounts);\n      }\n    };\n    if (solanaWallet) init();\n  }, [solanaWallet, web3Auth]);\n  return {\n    solanaWallet,\n    accounts,\n    connection\n  };\n};\n\nexport { useSolanaWallet };\n", "import { WalletInitializationError } from '@web3auth/no-modal';\nimport { useState, useCallback } from 'react';\nimport { useSolanaWallet } from './useSolanaWallet.js';\n\nconst useSignMessage = () => {\n  const {\n    solanaWallet,\n    accounts\n  } = useSolanaWallet();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const signMessage = useCallback(async (message, from) => {\n    setLoading(true);\n    setError(null);\n    try {\n      if (!solanaWallet) throw WalletInitializationError.notReady();\n      const signature = await solanaWallet.signMessage(message, from !== null && from !== void 0 ? from : accounts === null || accounts === void 0 ? void 0 : accounts[0]);\n      setData(signature);\n      return signature;\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [solanaWallet, accounts]);\n  return {\n    loading,\n    error,\n    data,\n    signMessage\n  };\n};\n\nexport { useSignMessage };\n", "import { WalletInitializationError } from '@web3auth/no-modal';\nimport { useState, useCallback } from 'react';\nimport { useSolanaWallet } from './useSolanaWallet.js';\n\nconst useSignTransaction = () => {\n  const {\n    solanaWallet\n  } = useSolanaWallet();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const signTransaction = useCallback(async transaction => {\n    setLoading(true);\n    setError(null);\n    try {\n      if (!solanaWallet) throw WalletInitializationError.notReady();\n      const signedTransaction = await solanaWallet.signTransaction(transaction);\n      setData(signedTransaction);\n      return signedTransaction;\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [solanaWallet]);\n  return {\n    loading,\n    error,\n    data,\n    signTransaction\n  };\n};\n\nexport { useSignTransaction };\n"],
  "mappings": "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",
  "names": ["import_react", "accounts", "error", "import_react", "error", "import_react", "error"]
}
